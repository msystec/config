name: Deploy to ECR

on:
 
  push:
    branches: [ main ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:  
        image: jenkins_pipeline
        registry: https://267767410086.dkr.ecr.us-east-1.amazonaws.com/jenkins_pipeline
      env:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

   
      
    - name: Build image
      run: | 
          docker build  "$IMAGE:$IMAGE_VERSION" \
            --build-arg IMAGE_VERSION="$IMAGE_VERSION" \
            --build-arg IMAGE_CREATE_DATE="`date -u +"%Y-%m-%dT%H:%M:%SZ"`" \
            --build-arg IMAGE_SOURCE_REVISION="`git rev-parse HEAD`" \
            --file src/app/Dockerfile src/app
      
    - name: Create additional image tags
      run: |
          docker tag $IMAGE:$IMAGE_VERSION $IMAGE:$IMAGE_MAJOR_VERSION
          docker tag $IMAGE:$IMAGE_VERSION $IMAGE:$IMAGE_MAJOR_VERSION.$IMAGE_MINOR_VERSION
          
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
          
    - name: Push image and tags to registry
      run: |
          docker push $IMAGE:$IMAGE_VERSION
          docker push $IMAGE:$IMAGE_MAJOR_VERSION
          docker push $IMAGE:$IMAGE_MAJOR_VERSION.$IMAGE_MINOR_VERSION

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: jenkins_pipeline
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
